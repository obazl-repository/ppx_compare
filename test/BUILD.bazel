package(default_visibility = ["//visibility:public"])

load("@bazel_skylib//rules:build_test.bzl", "build_test")

load("@rules_ocaml//build:rules.bzl",
     "ocaml_ns_archive",
     "ocaml_module",
     "ppx_executable",
     "ppx_module",
)

build_test(
    name    = "test",
    targets = [":Check_optims", ":Test"]
)

######################## Modules & Signatures ########################
ocaml_module(
    name          = "Check_optims",
    struct        = "check_optims.ml",
    ppx           = ":ppx_1.exe",
)

ocaml_module(
    name          = "Test",
    struct        = "test.ml",
    ppx           = ":ppx_1.exe",
    ppx_args      = ["-inline-test-lib", "comparelib_test"],
)


###############
ppx_executable(
    name    = "ppx_1.exe",
    main    = ":Ppx_driver",
    prologue = [
        "@ppxlib//lib/ppxlib",
        "//src:ppx_compare",
        "@ppx_inline_test//lib/ppx_inline_test"
    ],
    ppx_codeps = [
        # "//runtime-lib:ppx_compare_lib",
        "@ppx_inline_test//lib/runtime-lib"
    ]
)

#############
ppx_module(
    name       = "Ppx_driver",
    struct     = ":ppx_driver.ml",
    visibility = ["//visibility:public"],
    deps       = ["@ppxlib//lib/ppxlib"],
)

########
genrule(
    name = "__ppx_driver__",
    outs = ["ppx_driver.ml"],
    cmd = "\n".join([
        "echo \"(* GENERATED FILE - DO NOT EDIT *)\" > \"$@\"",
        "echo \"let () = Ppxlib.Driver.standalone ()\" >> \"$@\"",
    ])
)

